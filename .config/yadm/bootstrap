#!/bin/sh

#yadm sparse-checkout set --no-cone '/*' '!README.md' '!LICENSE'

# Update the push url.
ssh_url=$(yadm remote get-url origin | sed 's|https://github.com/|git@github.com:|')
yadm remote set-url --push origin "$ssh_url"

# Clone sub-repos
# Each entry contains: URL BRANCH SUBDIRECTORY
repos='https://github.com/honeycut1/kickstart.nvim.git   johnh   .config/nvim
https://github.com/honeycut1/wezterm-config.git   johnh   .config/wezterm'

# Process each repository entry
echo "$repos" | while IFS= read -r entry; do
    # Skip empty lines
    [ -z "$entry" ] && continue
    
    # Parse the entry into individual components using set
    set -- $entry
    url="$1"
    branch="$2"
    subdir="$3"

    # Construct the full path
    target_path="${HOME}/$subdir"

    printf "\n================================================\n"
    printf "Processing: %s\n" "$url"
    printf "    Branch: %s\n" "$branch"
    printf "    Target: %s\n" "$target_path"

    # Clone the repository to the target directory
    if [ ! -d "$target_path" ]; then
        printf "Cloning %s to %s...\n" "$url" "$target_path"
        git clone -b "$branch" "$url" "$target_path"
        # Update the push url.
        ssh_url=$(echo "$url" | sed 's|https://github.com/|git@github.com:|')
        (set -x; cd "$target_path" && git remote set-url --push origin "$ssh_url")
    else
        printf "Directory %s already exists, pulling latest changes...\n" "$target_path"
        (set -x; cd "$target_path" && git checkout "$branch" && git pull --rebase)
    fi
done

